# Rob Pike's Answer to "One Tool for One Job"

<blockquote>

<blockquote>

<p>
One tool for one job?
</p>

<p>
Given the nature of current operating systems and applications, do you think the idea of "one tool doing one job well" has been abandoned? If so, do you think a return to this model would help bring some innovation back to software development?
</p>

<p>
(It's easier to toss a small, single-purpose app and start over than it is to toss a large, feature-laden app and start over.)
</p>

</blockquote>

<p>
Rob Pike: Those days are dead and gone and the eulogy was delivered by Perl.
</p>

</blockquote>

[Slashdot Interview](https://interviews.slashdot.org/story/04/10/18/1153211/rob-pike-responds)

# Don Marti about the Unix Philosophy

I don't get the "Unix Philosophy" thing.

Posts about "this functionality is broken on systemd
but not OpenRC" are great, but "Unix Philosophy"?
What did that get us? A bunch of failing vendors in
the 1990s, and the inevitability of Windows NT.

<http://gabriellacoleman.org/blog/?p=1729>

The "philosophers" of Unix let themselves be rounded
up and made irrelevant.

If you want to build a better init system, build a
better init system. But philosophy-based OS advocacy
is a failure. Designing working software based on
philsophy is like writing real network software based
on the OSI 7-layer burrito model.

(Nothing against Rick's article.
<http://linuxmafia.com/kb/Debian/openrc-conversion.html>
I enjoyed reading it. No philosophy, which I
appreciate.)

— [Post to the linux-elitists mailing list](https://linux-elitists.zgp.narkive.com/XC079Jss/how-about-a-fork-of-jessie-without-systemd#post54)

# Larry Wall about Perl

Or think about shell programming, and reductionism. How many times have we heard the mantra that a program should do one thing and do it well?

Well...Perl does one thing, and does it well. What it does well is to integrate all its features into one language. More importantly, it does this without making them all look like each other. Ducts shouldn't look like girders, and girders shouldn't look like ducts. Neither of those should look like water pipes, and it's really important that water pipes not look like sewer pipes. Or smell like sewer pipes. Modernism says that we should make all these things look the same (and preferably invisible). Postmodernism says it's okay for them to stick out, and to look different, because a duct ought to look like a duct, and a sewer pipe ought to look like a sewer pipe, and hammer ought to look like a hammer, and a telephone ought to look like either a telephone, or a Star Trek communicator. Things that are different should look different. 

— [Perl, the first postmodern computer language](http://wall.org/~larry/pm.html) .

# Jokes

## "The UNIX Philosopy" on The Daily WTF

<https://thedailywtf.com/articles/The_UNIX_Philosophy>

<blockquote>

Changing the above code to <code>my $filesize = -s $file;</code> cut 75 minutes off the average execution time.

<blockquote>
